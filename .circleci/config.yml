version: 2.1

# the "CC_TEST_REPORTER_ID" env variable is configured via CircleCI UI to hide the value

references:
  test_path: &test_path
    reports/junit
  test_filename: &test_filename
    js-test-results.xml
  defaults: &defaults
    working_directory: ~/repo
    environment:
      - JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
  defaults_node_lts: &defaults_node_lts
    <<: *defaults
    docker:
      - image: node:carbon # LTS 8
  defaults_node_stable: &defaults_node_stable
    <<: *defaults
    docker:
      - image: node:latest # Latest Stable
  cache_key: &cache_key
    v3-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
  backup1_cache_key: &backup1_cache_key
    v3-dependencies-{{ .Branch }}-
  backup2_cache_key: &backup2_cache_key
    v3-dependencies-
  restore_dep_cache: &restore_dep_cache
    restore_cache:
      keys:
        - *cache_key
        - *backup1_cache_key
        - *backup2_cache_key
  save_dep_cache: &save_dep_cache
    save_cache:
      paths:
        - node_modules
      key: *cache_key
  default_steps: &default_steps
    - checkout
    - run:
        name: Setup Yarn
        command: |
          curl -o- -L https://yarnpkg.com/install.sh | bash &&
          echo 'export PATH=$HOME/.yarn/bin:$PATH' >> $BASH_ENV
    - run:
        name: Display Versions
        command: |
          echo "Node Version = $(node --version)"
          echo "npm Version = $(npm --version)"
          echo "Yarn Version = $(yarn --version)"
    - *restore_dep_cache
    - run:
        name: Install Dependencies
        command: yarn install --no-progress --frozen-lockfile
    - *save_dep_cache
    # TSLint is executed/checked via CodeClimate
    # - run:
    #     name: Run TSLint
    #     command: yarn lint
    - run:
        name: Compile TypeScript
        command: yarn compile
    - run:
        name: Run Unit Tests
        command: yarn test:ci
    - store_test_results:
          path: *test_path
    - store_artifacts:
        path: *test_path
    - run:
        name: Upload Code Coverage to Codecov
        command: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    - run:
        name: Upload Code Coverage to CodeClimate
        command: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t lcov -o $(pwd)/dist/coverage/codeclimate.json $(pwd)/dist/coverage/lcov.info
          ./cc-test-reporter upload-coverage -i $(pwd)/dist/coverage/codeclimate.json

jobs:
  node-lts:
    <<: *defaults_node_lts
    steps:
      *default_steps
  node-stable:
    <<: *defaults_node_stable
    steps:
      *default_steps

# to run multiple jobs in parallel
workflows:
  version: 2
  run_parallel:
    jobs:
      - node-lts
      - node-stable
